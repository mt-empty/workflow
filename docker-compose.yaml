# This is used for testing purposes only
# docker-comose version
version: "3.8"
services:
  postgres:
    image: postgres
    env_file: .envdocker
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: postgres
    networks:
      - postgres_ntw
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 2s
      timeout: 5s
      retries: 5

  # 1
  redis1:
    image: redis
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - engine1_ntw
  engine1:
    build: .
    env_file: .envdocker
    environment:
      ENVIRONMENT: prod
    depends_on:
      redis1:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - postgres_ntw
      - engine1_ntw

  # 2
  redis2:
    image: redis
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - engine2_ntw
  engine2:
    build: .
    env_file: .envdocker
    environment:
      ENVIRONMENT: prod
    depends_on:
      redis1:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - postgres_ntw
      - engine2_ntw

  # 3
  redis3:
    image: redis
    command: redis-server --save 60 1 --loglevel warning
    networks:
      - engine3_ntw
  engine3:
    build: .
    env_file: .envdocker
    environment:
      ENVIRONMENT: prod
    depends_on:
      redis3:
        condition: service_started
      postgres:
        condition: service_healthy
    networks:
      - postgres_ntw
      - engine3_ntw

networks:
  postgres_ntw:
    driver: bridge
  engine1_ntw:
    driver: bridge
  engine2_ntw:
    driver: bridge
  engine3_ntw:
    driver: bridge